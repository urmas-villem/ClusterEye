loki:
  fullnameOverride: loki
  
  serviceAccount:
    create: true
    annotations: {eks.amazonaws.com/role-arn: arn:aws:iam::115340599867:role/loki}
  
  monitoring:
    dashboards:
      enabled: false
    lokiCanary:
      enabled: false
    selfMonitoring:
      enabled: false
      grafanaAgent:
        installOperator: false
    
  enterprise:
    enabled: false
  
  test:
    enabled: false
  
  loki:
    image:
      registry: docker.io
      repository: grafana/loki
      tag: 2.9.1
      pullPolicy: IfNotPresent

    revisionHistoryLimit: 2

    auth_enabled: false
    storage:
      type: s3
      bucketNames: 
        chunks: "loki-default-1"
        ruler: "loki-default-1"
        admin: "loki-default-1"
      s3:
        s3: "s3://loki-default-1"
        region: us-east-1
        s3ForcePathStyle: false
        insecure: false
        #deprecated value
        sse_encryption: true
        #SSE-S3 should be default but added nonetheless
        sse:
          type: SSE-S3
    limits_config:
      enforce_metric_name: false
      ingestion_burst_size_mb: 400
      ingestion_rate_mb: 200
      max_cache_freshness_per_query: 10m
      max_entries_limit_per_query: 5000
      max_global_streams_per_user: 20000
      max_query_parallelism: 256
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      split_queries_by_interval: 6h
      retention_period: 4d
    compactor:
      shared_store: s3
      working_directory: /var/loki/boltdb-shipper-compactor
      retention_enabled: true
    ingester:
      chunk_block_size: 262144
      chunk_idle_period: 10m
      chunk_retain_period: 1m
      chunk_target_size: 3145728
      lifecycler:
        ring:
          replication_factor: 1
      max_transfer_retries: 0
      wal:
        dir: /var/loki/wal
    memberlist:
      join_members:
      - loki-memberlist
    querier:
      query_timeout: 2m
    ruler:
      storage:
        storage:
          s3:
            bucketnames: loki-default-1
            insecure: false
            region: us-east-1
            s3: s3://loki-default-1
            s3forcepathstyle: false
            #deprecated value
            sse_encryption: true
            #SSE-S3 should be default but added nonetheless
            sse:
              type: SSE-S3
          type: s3
    runtime_config:
      file: /etc/loki/runtime-config/runtime-config.yaml
    schema_config:
      configs:
      - from: "2022-10-24"
        index:
          period: 24h
          prefix: loki_index_
        object_store: s3
        schema: v12
        store: boltdb-shipper
    server:
      grpc_listen_port: 9095
      grpc_server_max_recv_msg_size: 20388078
      grpc_server_max_send_msg_size: 20388078
      http_listen_port: 3100
      http_server_read_timeout: 1800s
      http_server_write_timeout: 1800s
      log_level: debug
    storage_config:
      boltdb_shipper:
        active_index_directory: /var/loki/boltdb-shipper-active
        cache_location: /var/loki/boltdb-shipper-cache
        cache_ttl: 24h
        shared_store: s3
      hedging:
        at: 250ms
        max_per_second: 20
        up_to: 3
    query_scheduler:
      max_outstanding_requests_per_tenant: 4096
    frontend:
      max_outstanding_per_tenant: 4096
      scheduler_address: ""
    frontend_worker:
      scheduler_address: ""
    index_gateway:
      mode: ring
    query_range:
      align_queries_with_step: true
  
  gateway:
    replicas: 1 #4
    enabled: true
    podAnnotations: {sidecar.istio.io/inject: "false"}

    image:
      registry: docker.io
      repository: nginxinc/nginx-unprivileged
      tag: 1.23-alpine
      pullPolicy: IfNotPresent
    nginxConfig:
      # -- NGINX log format
      logFormat: |-
        main '$remote_addr - $remote_user [$time_local]  $status '
                '"$request" $body_bytes_sent "$http_referer" '
                '"$http_user_agent" "$http_x_forwarded_for"';
      # @default -- See values.yaml
      file: |
        {{- include "loki.nginxConfig" . | indent 2 -}}
  
  read:
    podLabels: {app: "loki"}
    replicas: 2 #4
    revisionHistoryLimit: 2
    legacyReadTarget: true
    extraEnvFrom:
    podAnnotations: {
      sidecar.istio.io/inject: "false",
      prometheus.io/scrape: "true",
      prometheus.io/port: "3100"}

    affinity:
      {}

    persistence:
      enableStatefulSetAutoDeletePVC: false
  
  write:
    replicas: 1 #4
    revisionHistoryLimit: 2
    extraEnvFrom:
    podAnnotations: {
      sidecar.istio.io/inject: "false",
      prometheus.io/scrape: "true",
      prometheus.io/port: "3100"}
    affinity:
      {}